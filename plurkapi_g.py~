# import urllib,urllib2,re,random,cookielib
import urllib,urllib2,re,random,plurkdata
#from django.utils import simplejson
from google.appengine.api import memcache
# import django.utils.simplejson as simplejson
# import simplejson

# nickname = 'inaiko'
class getplurkpic:
        def __init__(self,arg,size = 'big'):
                self.nickname = arg
                self.user_id =  -1
                self.karma = "-1"
                self.page = "qw"
                self.size = size
                self.finduid()

        def login(self, nickname, password):
                """ login to plurk and keep a session cookie """
                post = urllib.urlencode({'nick_name': nickname, 'password': password})
                request = urllib2.Request( self._plurk_paths['login'], post) 
                response = urllib2.urlopen( request )
                #self._cookies.extract_cookies( response, request )
                #print response
                #print request

        def finduid(self):
                """finduid"""
                #self.login('toomore','')
                
                response = urllib2.urlopen('http://www.plurk.com/%s' % (self.nickname) )
                self.page = response.read()
                
                uid_pat = re.compile('var GLOBAL = \{.*"uid": ([\d]+),.* "karma": ([\d]+),.*\}')
                matches = uid_pat.findall(self.page)
                self.user_id = matches[0]
                self.karma = matches[1]
                print "!!!!!"
                print "!!!!!"
                # http://avatars.plurk.com/703365-big4.jpg
                u_pic = re.compile('http://avatars\.plurk\.com/.*-big([\d]+)\.jpg')
                u_pic_m = u_pic.findall(self.page)
                
                print "qq" + self.user_id + "qq"
                print self.karma
                print u_pic_m[0]
                if not len(u_pic_m):
                        u_pic_m = [0,]
                #IN DATA
                indata = plurkdata.plurkindata(p_uname = self.nickname , p_uid = self.user_id , p_upicnum = u_pic_m[0])
                indata.put()
                return self.printpic(u_pic_m[0] , self.size)

        def getfriend(self):
                #response = urllib2.urlopen('http://www.plurk.com/%s' % (self.nickname) )
                #page = response.read()
                #uid_pat = re.compile('var FRIENDS = \{.*"nick_name": "([\w]+)*",.*\}')
                uid_pat = re.compile('"nick_name": "([\w]+)*"')
                matches = uid_pat.findall(self.page)
                return matches

        def printpic(self,x,size):
                # u_id , x = z  
                x = int(x)
                y = []
                y.append(x)
                while x:
                        x = x -1
                        #if x % 2 != 0: continue
                        if x:
                                y.append(x)
                #print y
                op_pic = "<br>Karma:"+ self.karma +"<br>"
                for i in y:
                        op_pic = op_pic + ('<img alt="" src="http://avatars.plurk.com/%s-%s%s.jpg">' % (self.user_id,size,i))
                op_pic = op_pic + ('<img alt="" src="http://avatars.plurk.com/%s-%s.jpg">' % (self.user_id,size))
                return op_pic
